{{define "form"}}
{{$id := "files-drop"}}

<style>
.reduced {
  max-width: 100px;
}
</style>

<div class="container">
  <form method="post" enctype="multipart/form-data">

    <div class="field">
      <label class="label">Orientation</label>
      <div class="control">
        <div class="select">
          <select name="direction">
            <option selected value="h">Horizontal</option>
            <option value="v">Vertical</option>
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <label class="label">
        Output size (height if vertical, width if horizontal)
      </label>
      <div class="control reduced">
        <input
          min="0"
          class="input"
          type="number"
          name="height"
          value="{{.DefaultHeight}}">
      </div>
    </div>

    <div class="field">
      <label class="label">Spacing size</label>
      <div class="control reduced">
        <input
          class="input"
          type="number"
          name="ssize"
          min="0"
          max="{{.MaxSSize}}"
          value="{{.DefaultSize}}">
      </div>
    </div>

    <div class="field">
      <label class="label">Spacing color</label>
      <div class="control reduced">
        <input
          class="input"
          type="color"
          name="scolor"
          value="{{.DefaultColor}}">
      </div>
    </div>

    <div id="{{$id}}"></div>

    <br>
    <div class="buttons">
      <button class="button is-primary">Generate now</button>
      <a class="button is-link" href="/">Start from scratch</a>
    </div>

  </form>
</div>

<script>
'use strict';

(function () {
  // react
  const e = React.createElement;

  function Field(props) {
    return e(
      'div',
      { className: 'field' },
      e(
        'div',
        { className: 'control' },
        e('label', { className: 'label' }, props.label),
        props.inner
      )
    )
  }

  class Uploader extends React.Component {
    constructor(props) {
      super(props)
      this.state = {
        count: 1
      }
    }

    onClick() {
      this.setState({
        count: this.state.count + 1
      })
    }

    render() {
      const files = []
      for (let i=0;i<this.state.count;i++) {
        files.push([FileUploader, { key: i }])
      }

      return e(
        'div',
        null,
        e(
          Field,
          {
            label: 'Files',
            inner: e(
              'a', {
                onClick: () => this.onClick(),
                className: 'button is-link'
              }, 'Add another file'
            )
          },
        ),
        ...files.map(f => [e(...f), null])
      )
    }
  }

  class FileUploader extends React.Component {
    constructor(props) {
      super(props)
      this.state = {
        fileName: null
      }
    }

    onChange (e) {
      let name
      try {
        name = e.target.files[0].name
      } catch (e) {
        console.error(e)
        return
      }
      this.setState({
        fileName: name
      })
    }

    render() {
      return e(
        Field,
        {
          inner: e(
            'div',
            { className: 'file has-name' },
            e(
              'label',
              { className: 'file-label' },
              e(
                'input',
                {
                  className: 'file-input',
                  type: 'file',
                  name: '{{.FileField}}',
                  required: true,
                  onChange: (e) => this.onChange(e)
                }
              ),
              e(
                'span',
                { className: 'file-cta' },
                e(
                  'span',
                  { className: 'file-icon' },
                  e('i', { className: 'fas fa-upload' })
                ),
                e(
                  'span',
                  { className: 'file-label' },
                  'Choose a file...'
                )
              ),
              e(
                'span',
                { className: 'file-name' },
                this.state.fileName || 'No file selected'
              )
            )
          )
        }
      )
    }
  }

  // mount
  const domContainer = document.querySelector('#{{$id}}')
  ReactDOM.render(e(Uploader), domContainer)
})()
</script>
{{end}}
